# Generated by Django 5.1.6 on 2025-04-27 13:23

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('www', '0010_teacher_additional_teacher_awards_teacher_category_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Категория питания',
                'verbose_name_plural': 'Категории питания',
            },
        ),
        migrations.CreateModel(
            name='FoodDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to='food_documents/')),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Документ по питанию',
                'verbose_name_plural': 'Документы по питанию',
            },
        ),
        migrations.CreateModel(
            name='FoodMonitoringReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('report_file', models.FileField(upload_to='food_monitoring_reports/')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Отчет о мониторинге питания',
                'verbose_name_plural': 'Отчеты о мониторинге питания',
            },
        ),
        migrations.CreateModel(
            name='MenuDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('monday', 'Понедельник'), ('tuesday', 'Вторник'), ('wednesday', 'Среда'), ('thursday', 'Четверг'), ('friday', 'Пятница'), ('saturday', 'Суббота'), ('sunday', 'Воскресенье')], max_length=20)),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'День меню',
                'verbose_name_plural': 'Дни меню',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('calories', models.IntegerField(default=0)),
                ('proteins', models.FloatField(default=0)),
                ('fats', models.FloatField(default=0)),
                ('carbohydrates', models.FloatField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='food_images/')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
            },
        ),
        migrations.CreateModel(
            name='MenuType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Тип меню',
                'verbose_name_plural': 'Типы меню',
            },
        ),
        migrations.CreateModel(
            name='FoodSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='www.foodcategory')),
            ],
            options={
                'verbose_name': 'Расписание питания',
                'verbose_name_plural': 'Расписание питания',
            },
        ),
        migrations.CreateModel(
            name='MenuDayItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('menu_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='www.menuday')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='www.menuitem')),
            ],
            options={
                'verbose_name': 'Элемент дневного меню',
                'verbose_name_plural': 'Элементы дневного меню',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='menuday',
            name='items',
            field=models.ManyToManyField(through='www.MenuDayItem', to='www.menuitem'),
        ),
        migrations.AddField(
            model_name='menuday',
            name='menu_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='www.menutype'),
        ),
        migrations.CreateModel(
            name='MenuWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('days', models.ManyToManyField(related_name='menu_weeks', to='www.menuday')),
            ],
            options={
                'verbose_name': 'Неделя меню',
                'verbose_name_plural': 'Недели меню',
            },
        ),
    ]
